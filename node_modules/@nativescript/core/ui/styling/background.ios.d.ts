import { View } from '../core/view';
export * from './background-common';
interface CappedOuterRadii {
    topLeft: number;
    topRight: number;
    bottomLeft: number;
    bottomRight: number;
}
export declare enum CacheMode {
    none = 0
}
export declare namespace ios {
    function createBackgroundUIColor(view: View, callback: (uiColor: UIColor) => void, flip?: boolean): void;
    function drawBackgroundVisualEffects(view: View): void;
    function clearBackgroundVisualEffects(view: View): void;
    function generateShadowLayerPaths(view: View, bounds: CGRect): {
        maskPath: any;
        shadowPath: any;
    };
    function generateClipPath(view: View, bounds: CGRect): UIBezierPath;
    function getUniformBorderRadius(view: View, bounds: CGRect): number;
    function generateNonUniformBorderInnerClipRoundedPath(view: View, bounds: CGRect): any;
    function generateNonUniformBorderOuterClipRoundedPath(view: View, bounds: CGRect): any;
    function generateNonUniformMultiColorBorderRoundedPaths(view: View, bounds: CGRect): Array<any>;
}
/**
 * Generates a path that represents the rounded view area.
 *
 * @param bounds
 * @param cappedRadii
 * @param offset
 * @returns
 */
export declare function generateNonUniformBorderOuterClipPath(bounds: CGRect, cappedRadii: CappedOuterRadii, offset?: number): any;
